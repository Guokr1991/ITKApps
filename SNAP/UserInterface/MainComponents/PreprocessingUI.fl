# data file for the Fltk User Interface Designer (fluid)
version 1.0102 
header_name {.h} 
code_name {.cxx}
class PreprocessingUI {open : PreprocessingUIBase
} {
  Function {MakeWindow()} {open
  } {
    Fl_Window m_WinInOut {
      label {Intensity Region Filter} open
      xywh {463 480 399 350} type Double box PLASTIC_DOWN_BOX
      code0 {\#include "PreprocessingUIBase.h"} non_modal visible
    } {
      Fl_Value_Slider m_InThresholdSteepness {
        label Smoothness
        callback {o->take_focus();
this->OnThresholdSettingsChange();}
        xywh {25 265 200 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 step 0.1 value 0.25
      }
      Fl_Group m_GrpThresholdDirection {
        label {Threshold direction:} open
        xywh {250 175 135 70} labelsize 12 align 5
      } {
        Fl_Round_Button m_RadioThresholdAbove {
          callback {this->OnThresholdDirectionChange();}
          xywh {260 200 120 20} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_RadioThresholdBelow {
          callback {this->OnThresholdDirectionChange();}
          xywh {260 180 120 20} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_RadioThresholdBoth {
          callback {this->OnThresholdDirectionChange();}
          xywh {260 220 120 20} type Radio down_box ROUND_DOWN_BOX value 1
        }
        Fl_Group {} {
          label Below open
          xywh {275 180 80 20} labelsize 12 align 20
        } {}
        Fl_Group {} {
          label Above open
          xywh {275 200 80 20} labelsize 12 align 20
        } {}
        Fl_Group {} {
          label {Below and Above} open
          xywh {275 220 105 20} labelsize 12 align 20
        } {}
      }
      Fl_Button m_BtnThresholdOk {
        label Okay
        callback {this->OnThresholdOk();}
        xywh {170 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 180 selection_color 134 labelfont 1 labelsize 12
      }
      Fl_Button m_BtnThresholdApply {
        label Apply
        callback {this->OnThresholdApply();}
        xywh {245 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 180 selection_color 134 labelsize 12
      }
      Fl_Button m_BtnThresholdClose {
        label Close
        callback {this->OnThresholdClose();}
        xywh {320 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 180 selection_color 134 labelsize 12
      }
      Fl_Check_Button m_InThresholdPreview {
        label {Preview result}
        callback {this->OnThresholdPreviewChange();}
        xywh {250 245 105 25} down_box DOWN_BOX value 1 labelsize 12
      }
      Fl_Check_Button m_InThresholdOverlay {
        label {Combined display}
        callback {this->OnThresholdOverlayChange();}
        tooltip {When this option is selected, the preprocessing result will be painted over the input image} xywh {250 265 125 25} down_box DOWN_BOX labelsize 12 align 148
      }
      Fl_Group {} {
        label {The thresholding function} open
        xywh {25 15 350 120} box BORDER_FRAME color 0 labelsize 11 align 2
      } {
        Fl_Box m_BoxThresholdFunctionPlot {
          xywh {25 15 350 120}
          class FunctionPlot2DBox
        }
      }
      Fl_Slider m_OutThresholdProgress {
        xywh {0 335 400 15} type {Horz Fill} selection_color 180 labelsize 12 align 0 value 1 deactivate
      }
      Fl_Value_Input m_InLowerThresholdText {
        label {Lower threshold}
        callback {this->OnThresholdLowerChange(o->value());} selected
        xywh {25 175 40 20} color 51 labelsize 12 align 5 maximum 100 step 0.1 textsize 10
      }
      Fl_Slider m_InLowerThreshold {
        callback {o->take_focus();
this->OnThresholdLowerChange(o->value());}
        xywh {70 175 155 20} type Horizontal color 51 selection_color 197 value 0.3
      }
      Fl_Value_Input m_InUpperThresholdText {
        label {Upper threshold}
        callback {this->OnThresholdUpperChange(o->value());}
        xywh {25 220 40 20} color 51 labelsize 12 align 5 maximum 100 step 0.1 textsize 10
      }
      Fl_Slider m_InUpperThreshold {
        callback {o->take_focus();
this->OnThresholdUpperChange(o->value());}
        xywh {70 220 155 20} type Horizontal color 51 selection_color 197 value 0.3
      }
    }
    Fl_Window m_WinEdge {
      label {Image Edge Filter} open
      xywh {48 188 400 351} type Double box PLASTIC_DOWN_BOX non_modal visible
    } {
      Fl_Value_Slider m_InEdgeScale {
        label {Scale of Gaussian blurring (sigma)}
        callback {o->take_focus();
this->OnEdgeSettingsChange();}
        xywh {25 175 225 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 minimum 0.1 maximum 3 step 0.1 value 1
      }
      Fl_Value_Slider m_InEdgeKappa {
        label {Edge contrast (kappa)}
        callback {o->take_focus();
this->OnEdgeSettingsChange();}
        xywh {25 220 225 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 minimum 0.002 maximum 0.2 step 0.002 value 0.1
      }
      Fl_Value_Slider m_InEdgeExponent {
        label {Edge mapping exponent}
        callback {o->take_focus();
this->OnEdgeSettingsChange();}
        xywh {25 265 225 20} type Horizontal color 51 selection_color 197 labelsize 12 align 5 minimum 1 maximum 3 step 0.05 value 2
      }
      Fl_Button m_BtnEdgeOK {
        label Okay
        callback {this->OnEdgeOk();}
        xywh {170 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 180 selection_color 134 labelfont 1 labelsize 12
      }
      Fl_Button m_BtnEdgeApply {
        label Apply
        callback {this->OnEdgeApply();}
        xywh {245 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 180 selection_color 134 labelsize 12
      }
      Fl_Button m_BtnEdgeClose {
        label Close
        callback {this->OnEdgeClose();}
        xywh {320 300 65 25} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX color 180 selection_color 134 labelsize 12
      }
      Fl_Check_Button m_InEdgePreview {
        label {Preview result}
        callback {this->OnEdgePreviewChange();}
        xywh {270 170 105 25} down_box DOWN_BOX labelsize 12
      }
      Fl_Group {} {
        label {The function g() applied to the gradient magnitude image} open
        xywh {25 15 350 120} box BORDER_FRAME color 0 labelsize 11 align 2
      } {
        Fl_Box m_BoxEdgeFunctionPlot {
          xywh {25 15 350 120} box BORDER_BOX color 7 align 25
          class FunctionPlot2DBox
        }
      }
      Fl_Slider m_OutEdgeProgress {
        xywh {0 335 400 15} type {Horz Fill} selection_color 180 labelsize 12 align 0 value 1 deactivate
      }
    }
  }
} 
