# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cxx}
class RegionGrowingSegmentation2DGUI {open : {public RegionGrowingSegmentationBase2D}
} {
  Function {RegionGrowingSegmentation2DGUI()} {open
  } {
    Fl_Window consoleWindow {
      label {Region Growing Segmentation} open selected
      xywh {474 372 985 440} type Double
      code0 {\#include <RegionGrowingSegmentationBase2D.h>}
      code1 {\#include <fltkLightButton.h>} visible
    } {
      Fl_Group Connectors {open
        xywh {0 0 985 380}
      } {
        Fl_Box {} {
          xywh {725 88 108 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {55 55 9 90} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {575 86 68 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {575 192 69 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {573 86 9 118} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {500 147 9 48} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {520 142 60 9} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {726 192 104 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {422 141 52 9} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {846 192 60 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {75 141 52 9} box UP_BOX color 4
        }
      }
      Fl_Group controlsGroup {open
        xywh {5 5 985 370} deactivate
      } {
        Fl_Light_Button inputImageButton {
          label {Input Image}
          callback {ShowInputImage();}
          xywh {20 129 78 39} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Light_Button thresholdConnectedImageButton {
          label Display
          callback {this->ShowConnectedThresholdImage();}
          xywh {786 81 70 25} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Connected Threshold}
          callback {m_ConnectedThresholdImageFilter->Update();}
          xywh {605 74 170 37} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Counter lowerThresholdCounter {
          label Lower
          callback {m_ConnectedThresholdImageFilter->SetLower( static_cast<InputPixelType>( o->value() ) );}
          xywh {643 111 121 25} labelsize 12 align 4 minimum 0 maximum 65535 step 1 value 100 textsize 12
          code0 {o->lstep(10.0);}
        }
        Fl_Counter upperThresholdCounter {
          label Upper
          callback {m_ConnectedThresholdImageFilter->SetUpper( static_cast<InputPixelType>( o->value() ) );}
          xywh {643 136 121 25} labelsize 12 align 4 minimum 0 maximum 65535 step 1 value 200 textsize 12
          code0 {o->lstep( 10.0 );}
        }
        Fl_Group seedGroup {
          label {Seed Point}
          xywh {453 183 95 142} box ENGRAVED_BOX align 17
        } {
          Fl_Value_Output xSeedPointValueOutput {
            label {X }
            xywh {481 208 55 25} labelsize 12 step 0.01 textsize 12
          }
          Fl_Value_Output ySeedPointValueOutput {
            label {Y }
            xywh {481 235 55 25} labelsize 12 step 0.01 textsize 12
          }
          Fl_Value_Output zSeedPointValueOutput {
            label {Z }
            xywh {480 262 55 25} labelsize 12 step 0.01 textsize 12
          }
          Fl_Value_Output vSeedPointValueOutput {
            label {V }
            xywh {480 290 55 25} labelsize 12 step 0.01 textsize 12
          }
        }
        Fl_Light_Button homogeneousImageButton {
          label {Homogeneous Image}
          callback {ShowHomogeneousImage();}
          xywh {440 126 118 40} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Confidence Connected}
          callback {m_ConfidenceConnectedImageFilter->Update();}
          xywh {605 179 170 37} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button confidenceConnectedImageButton {
          label Display
          callback {this->ShowConfidenceConnectedImage();}
          xywh {787 185 70 25} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Light_Button composedImageButton {
          label {Display Composed}
          callback {this->ShowComposedImage();}
          xywh {885 179 79 36} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Choice {} {
          xywh {170 290 225 30} down_box BORDER_BOX
        } {
          MenuItem {} {
            label {Bilateral }
            callback {this->SelectSmoothingFilter( 0 );}
            xywh {30 30 100 20}
          }
          MenuItem {} {
            label {Curvature Flow}
            callback {this->SelectSmoothingFilter( 1 );}
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label {Gradient Anisotropic Diffusion}
            callback {this->SelectSmoothingFilter( 2 );}
            xywh {10 10 100 20}
          }
          MenuItem {} {
            label {Curvature Anisotropic Diffusion}
            callback {this->SelectSmoothingFilter( 3 );}
            xywh {20 20 100 20}
          }
        }
        Fl_Tabs {} {open
          xywh {110 65 320 225}
        } {
          Fl_Group bilateralImageFilterGroup {
            label Bilateral
            xywh {110 105 319 185} align 193
          } {
            Fl_Box {} {
              xywh {110 140 319 10} box UP_BOX color 4
            }
            Fl_Button {} {
              label Bilateral
              callback {m_BilateralImageFilter->Update();}
              xywh {155 121 166 44} box ROUND_UP_BOX labelsize 12 align 128
            }
            Fl_Value_Input bilateralRangeSigmaValueInput {
              label {Range Sigma}
              callback {m_BilateralImageFilter->SetRangeSigma( o->value() );}
              xywh {245 165 55 25} labelsize 12 maximum 200 value 50 textsize 12
            }
            Fl_Value_Input bilateralDomainSigmaValueInput {
              label {Domain Sigma}
              callback {m_BilateralImageFilter->SetDomainSigma( o->value() );}
              xywh {245 190 55 25} labelsize 12 minimum 1 maximum 100 value 5 textsize 12
            }
            Fl_Light_Button bilateralImageButton {
              label Display
              callback {this->ShowBilateralImage();}
              xywh {330 134 68 26} type Normal value 1 selection_color 1 labelsize 12 align 148
              class {fltk::LightButton}
            }
          }
          Fl_Group curvatureFlowImageFilterGroup {
            label {Curvature Flow}
            xywh {110 105 320 183} align 193 hide
          } {
            Fl_Box {} {
              xywh {110 141 320 10} box UP_BOX color 4
            }
            Fl_Button {} {
              label {Curvature Flow}
              callback {m_CurvatureFlowImageFilter->Update();}
              xywh {135 127 165 37} box ROUND_UP_BOX labelsize 12 align 128
            }
            Fl_Value_Input curvatureFlowTimeStepValueInput {
              label TimeStep
              callback {m_CurvatureFlowImageFilter->SetTimeStep( o->value() );}
              xywh {229 164 55 25} labelsize 12 maximum 10 value 0.25 textsize 12
            }
            Fl_Value_Input curvatureFlowIterationsValueInput {
              label Iterations
              callback {m_CurvatureFlowImageFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
              xywh {229 189 55 25} labelsize 12 minimum 1 maximum 1000 value 10 textsize 12
            }
            Fl_Light_Button curvatureFlowImageButton {
              label Display
              callback {this->ShowCurvatureFlowImage();}
              xywh {328 133 68 26} type Normal value 1 selection_color 1 labelsize 12 align 148
              class {fltk::LightButton}
            }
          }
          Fl_Group gradientAnisotropicDiffusionImageFilterGroup {
            label {Gradient Anis.Diff.}
            xywh {110 105 320 183} align 65 hide
          } {
            Fl_Box {} {
              xywh {110 141 320 10} box UP_BOX color 4
            }
            Fl_Button {} {
              label {Gradient Anisotropic Diffusion}
              callback {m_GradientAnisotropicDiffusionImageFilter->Update();}
              xywh {144 126 167 44} box ROUND_UP_BOX labelsize 12 align 128
            }
            Fl_Value_Input gradientAnisotropicDiffusionTimeStepValueInput {
              label TimeStep
              callback {m_GradientAnisotropicDiffusionImageFilter->SetTimeStep( o->value() );}
              xywh {242 170 55 25} labelsize 12 maximum 10 value 0.25 textsize 12
            }
            Fl_Value_Input gradientAnisotropicDiffusionIterationsValueInput {
              label Iterations
              callback {m_GradientAnisotropicDiffusionImageFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
              xywh {242 195 55 25} labelsize 12 minimum 1 maximum 1000 value 10 textsize 12
            }
            Fl_Value_Input gradientAnisotropicDiffusionConductanceValueInput {
              label Conductance
              callback {m_GradientAnisotropicDiffusionImageFilter->SetConductanceParameter( o->value() );}
              xywh {242 220 55 25} labelsize 12 maximum 10 step 0.01 value 3 textsize 12
            }
            Fl_Light_Button gradientAnisotropicDiffusionImageButton {
              label Display
              callback {this->ShowGradientAnisotropicDiffusionImage();}
              xywh {335 135 68 25} type Normal value 1 selection_color 1 labelsize 12 align 148
              class {fltk::LightButton}
            }
          }
          Fl_Group curvatureAnisotropicDiffusionImageFilterGroup {
            label {Curvature Anis. Diff.}
            xywh {111 105 319 183} align 129 hide
          } {
            Fl_Box {} {
              xywh {111 142 319 10} box UP_BOX color 4
            }
            Fl_Button {} {
              label {Curvature Anisotropic Diffusion}
              callback {m_CurvatureAnisotropicDiffusionImageFilter->Update();}
              xywh {145 126 166 44} box ROUND_UP_BOX labelsize 12 align 128
            }
            Fl_Value_Input curvatureAnisotropicDiffusionTimeStepValueInput {
              label TimeStep
              callback {m_CurvatureAnisotropicDiffusionImageFilter->SetTimeStep( o->value() );}
              xywh {235 170 55 25} labelsize 12 maximum 10 value 0.25 textsize 12
            }
            Fl_Value_Input curvatureAnisotropicDiffusionIterationsValueInput {
              label Iterations
              callback {m_CurvatureAnisotropicDiffusionImageFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
              xywh {235 195 55 25} labelsize 12 minimum 1 maximum 100 value 10 textsize 12
            }
            Fl_Value_Input curvatureAnisotropicDiffusionConductanceValueInput {
              label Conductance
              callback {m_CurvatureAnisotropicDiffusionImageFilter->SetConductanceParameter( o->value() );}
              xywh {235 220 55 25} labelsize 12 maximum 10 step 0.01 value 3 textsize 12
            }
            Fl_Light_Button curvatureAnisotropicDiffusionImageButton {
              label Display
              callback {this->ShowCurvatureAnisotropicDiffusionImage();}
              xywh {335 134 68 26} type Normal value 1 selection_color 1 labelsize 12 align 148
              class {fltk::LightButton}
            }
          }
        }
        Fl_Button {} {
          label Save
          callback {this->WriteConnectedThresholdImage();}
          xywh {783 106 75 27} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Button {} {
          label Save
          callback {this->WriteConfidenceConnectedImage();}
          xywh {785 210 75 27} box ROUND_UP_BOX labelsize 12 align 128
        }
      }
      Fl_Slider progressSlider {
        xywh {10 382 945 15} type {Horz Fill} selection_color 2
        code0 {\#include <fltkProgressBar.h>}
        class {fltk::ProgressBar}
      }
      Fl_Output statusTextOutput {
        xywh {10 405 945 25}
      }
      Fl_Value_Input multiplierValueInput {
        label Multiplier
        callback {m_ConfidenceConnectedImageFilter->SetMultiplier( o->value() );}
        xywh {697 217 55 25} labelsize 12 minimum 1 maximum 100 value 2.5 textsize 12
      }
      Fl_Value_Input iterationsConfidenceValueInput {
        label Iterations
        callback {m_ConfidenceConnectedImageFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
        xywh {697 243 55 25} labelsize 12 minimum 1 maximum 100 value 10 textsize 12
      }
      Fl_Button {} {
        label Quit
        callback {this->Quit();}
        xywh {826 330 90 35} box ROUND_UP_BOX labelsize 12 align 128
      }
      Fl_Button {} {
        label Load
        callback {this->LoadInputImage();}
        xywh {19 53 81 35} box ROUND_UP_BOX labelsize 12 align 128
      }
    }
  }
  Function {~RegionGrowingSegmentation2DGUI()} {return_type virtual
  } {}
  Function {Quit( void )} {return_type {virtual void}
  } {}
  Function {Load( void )} {return_type {virtual void}
  } {}
  Function {ShowAbout( void )} {return_type {virtual void}
  } {}
  Function {ShowInputImage( void )} {return_type {virtual void}
  } {}
  Function {ShowConnectedThresholdImage( void )} {return_type {virtual void}
  } {}
  Function {ShowConsole( void )} {return_type {virtual void}
  } {}
  Function {ShowHomogeneousImage( void )} {return_type {virtual void}
  } {}
  Function {ShowConfidenceConnectedImage( void )} {return_type {virtual void}
  } {}
  Function {ShowCurvatureFlowImage( void )} {return_type {virtual void}
  } {}
  Function {ShowCurvatureAnisotropicDiffusionImage( void )} {return_type {virtual void}
  } {}
  Function {ShowGradientAnisotropicDiffusionImage( void )} {return_type {virtual void}
  } {}
  Function {ShowComposedImage( void )} {return_type {virtual void}
  } {}
  Function {ShowBilateralImage( void )} {return_type {virtual void}
  } {}
} 
