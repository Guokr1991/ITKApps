# data file for the Fltk User Interface Designer (fluid)
version 1.0104 
header_name {.h} 
code_name {.cxx}
class ImageRegistrationConsoleGUI {open : {public ImageRegistrationConsoleBase}
} {
  Function {ImageRegistrationConsoleGUI()} {open
  } {
    Fl_Window consoleWindow {
      label {Image Registration Console} open
      xywh {111 42 906 620} type Double color 54
      code0 {\#include <ImageRegistrationConsoleBase.h>}
      code1 {\#include <fltkLightButton.h>} visible
    } {
      Fl_Group Connectors {
        xywh {-10 0 946 560}
      } {
        Fl_Box {} {
          xywh {90 20 100 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {225 36 10 35} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {225 89 10 35} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {225 144 10 31} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {225 166 265 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {224 187 10 31} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {225 187 265 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {90 535 100 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {224 498 10 35} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {224 447 10 35} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {226 392 10 42} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {226 390 222 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {480 284 10 104} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {267 279 182 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {224 234 10 42} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {659 174 100 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {674 98 84 10} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {672 98 10 62} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {508 138 10 32} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {790 185 10 95} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {720 271 10 67} box PLASTIC_UP_BOX color 3
        }
        Fl_Box {} {
          xywh {284 223 481 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {756 184 10 50} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {97 281 100 10} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {540 346 124 10} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {538 434 118 10} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {538 346 10 98} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {732 276 106 10} box PLASTIC_UP_BOX color 4
        }
        Fl_Box {} {
          xywh {372 31 10 81} box PLASTIC_UP_BOX color 128
        }
        Fl_Box {} {
          xywh {372 136 146 10} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {372 101 10 43} box PLASTIC_UP_BOX color 222
        }
        Fl_Box {} {
          xywh {564 99 10 67} box PLASTIC_UP_BOX color 222
        }
      }
      Fl_Group controlsGroup {open
        xywh {5 0 901 566} color 222
      } {
        Fl_Light_Button inputFixedImageButton {
          label {Fixed Image}
          callback {ShowInputFixedImage();}
          xywh {184 13 109 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label Quit
          callback {this->Quit();}
          xywh {823 516 64 27} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button registrationMethodButton {
          label {Registration Method}
          xywh {484 152 205 56} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Resample Filter}
          callback {this->GenerateRegisteredMovingImage();}
          xywh {738 164 125 30} box PLASTIC_DOWN_BOX labelsize 12 align 128
        }
        Fl_Light_Button registeredMovingImageButton {
          label {Registered Image}
          callback {this->ShowRegisteredMovingImage();}
          xywh {678 263 94 35} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label Stop
          callback {Stop();}
          xywh {698 516 66 27} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button inputMovingImageButton {
          label {Moving Image}
          callback {this->ShowInputMovingImage();}
          xywh {184 527 109 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label Start
          callback {Execute();}
          xywh {588 516 65 27} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Button {} {
          label {Normalize image}
          callback {this->GenerateFixedImage();}
          xywh {158 66 165 25} box PLASTIC_DOWN_BOX
        }
        Fl_Button {} {
          label {Normalize Image}
          callback {this->GenerateNormalizedInputMovingImage();}
          xywh {158 480 165 25} box PLASTIC_DOWN_BOX
        }
        Fl_Light_Button fixedImageButton {
          label {Fixed Image}
          callback {ShowFixedImage();}
          xywh {184 121 109 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
          class {fltk::LightButton}
        }
        Fl_Light_Button normalizedInputMovingImageButton {
          label {Moving Image}
          callback {this->ShowNormalizedInputMovingImage();}
          xywh {184 428 109 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
          class {fltk::LightButton}
        }
        Fl_Light_Button transformedMovingImageButton {
          label {Moving Image}
          callback {this->ShowTransformedMovingImage();}
          xywh {438 271 109 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
          class {fltk::LightButton}
        }
        Fl_Group movingImageRotationParameter {
          label Rotation open
          xywh {588 328 80 42} box PLASTIC_UP_BOX color 222
        } {
          Fl_Value_Input movingImageRotationAngle {
            label {A:}
            xywh {614 338 25 25}
          }
        }
        Fl_Group movingImageTranslationParameters {
          label Translation open
          xywh {588 407 80 60} box PLASTIC_UP_BOX color 222
        } {
          Fl_Value_Input movingImageTranslationX {
            label {X:}
            xywh {616 414 25 25}
          }
          Fl_Value_Input movingImageTranslationY {
            label {Y:}
            xywh {616 436 25 25}
          }
        }
        Fl_Button {} {
          label {Noise Addition}
          callback {this->GenerateMovingImage();}
          xywh {183 271 109 28} box PLASTIC_DOWN_BOX
        }
        Fl_Light_Button movingImageButton {
          label {Moving Image}
          callback {this->ShowMovingImage();}
          xywh {183 215 109 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Resample Filter}
          callback {this->GenerateTransformedMovingImage();}
          xywh {428 380 125 30} box PLASTIC_DOWN_BOX labelsize 12 align 128
        }
        Fl_Group movingImageNoiseParameters {
          label {Noise Parameters} open
          xywh {28 259 95 65} box PLASTIC_UP_BOX color 222 labelcolor 0
        } {
          Fl_Value_Input movingImageNoiseMean {
            label {mean:}
            xywh {81 266 25 25}
          }
          Fl_Value_Input movingImageNoiseStandardDeviation {
            label {std:}
            xywh {81 288 25 25}
          }
        }
        Fl_Group optimizerParameters {
          label Optimizer open
          xywh {706 16 184 144} box PLASTIC_UP_BOX color 222
        } {
          Fl_Value_Input numberOfIterations {
            label {No of Iterations:}
            xywh {826 22 50 24} value 2000
          }
          Fl_Value_Input minimumStepLength {
            label {Min. Step Length:}
            xywh {826 44 50 24} value 0.001
          }
          Fl_Value_Input maximumStepLength {
            label {Max. Step Length:}
            xywh {826 67 50 24} value 0.1
          }
          Fl_Value_Input rotationScale {
            label {Rotation Scale:}
            xywh {826 90 50 22} value 1
          }
          Fl_Value_Input translationScale {
            label {Translation Scale:}
            xywh {826 111 50 24} value 0.001
          }
          Fl_Value_Input scalingScale {
            label {Scaling Scale:}
            xywh {826 134 50 24} maximum 100 value 10
          }
        }
        Fl_Light_Button mixedChannelImageButton {
          label {Mixed Channel Image}
          callback {this->ShowMixedChannelImage();}
          xywh {818 257 82 51} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Group mutualInformationGroup {open
          xywh {304 0 160 146}
        } {
          Fl_Button {} {
            label {Mutual Information}
            callback {this->SelectMutualInformationMetric();}
            xywh {314 96 138 25} box PLASTIC_UP_BOX color 222
          }
          Fl_Group MutualInformationParameter {
            label {Mutual Information} open
            xywh {314 18 142 26} box PLASTIC_UP_BOX color 128
          } {
            Fl_Value_Input mutualInformationNumberOfBins {
              label {Number of Bins:}
              xywh {422 22 30 18} value 10
            }
          }
        }
        Fl_Group meanSquaresGroup {open
          xywh {460 82 236 50}
        } {
          Fl_Button {} {
            label {Mean Squares}
            callback {this->SelectMeanSquaresMetric();}
            xywh {502 95 144 25} box PLASTIC_UP_BOX color 222
          }
        }
      }
      Fl_Slider progressSlider {
        xywh {10 560 880 15} type {Horz Fill} selection_color 2
        code0 {\#include <fltkProgressBar.h>}
        class {fltk::ProgressBar}
      }
      Fl_Output statusTextOutput {
        xywh {10 581 880 24}
      }
      Fl_Light_Button loadFixedImageButton {
        label Load
        callback {this->LoadFixedImage();}
        xywh {29 13 65 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
        class {fltk::LightButton}
      }
      Fl_Light_Button loadMovingImageButton {
        label Load
        callback {this->LoadMovingImage();}
        xywh {29 526 65 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
        class {fltk::LightButton}
      }
      Fl_Light_Button saveRegisteredImageButton {
        label Save
        callback {this->SaveRegisteredImage();}
        xywh {695 320 65 25} type Normal box PLASTIC_UP_BOX value 1 selection_color 1 labelsize 12
        class {fltk::LightButton}
      }
    }
  }
  Function {~ImageRegistrationConsoleGUI()} {return_type virtual
  } {}
  Function {Quit( void )} {return_type {virtual void}
  } {}
  Function {Load( void )} {return_type {virtual void}
  } {}
  Function {ShowAbout( void )} {return_type {virtual void}
  } {}
  Function {ShowFixedImage( void )} {return_type {virtual void}
  } {}
  Function {ShowMovingImage( void )} {return_type {virtual void}
  } {}
  Function {ShowRegisteredMovingImage( void )} {return_type {virtual void}
  } {}
  Function {ShowInputFixedImage( void )} {return_type {virtual void}
  } {}
  Function {ShowInputMovingImage( void )} {return_type {virtual void}
  } {}
  Function {ShowNormalizedInputMovingImage( void )} {selected return_type {virtual void}
  } {}
  Function {ShowTransformedMovingImage( void )} {return_type {virtual void}
  } {}
  Function {ShowMixedChannelImage( void )} {return_type {virtual void}
  } {}
  Function {SaveRegisteredImage( void )} {return_type {virtual void}
  } {}
} 
