# data file for the Fltk User Interface Designer (fluid)
version 1.0100 
header_name {.h} 
code_name {.cxx}
class ThresholdSegmentationLevelSetGUI {open : {public ThresholdSegmentationLevelSetBase}
} {
  Function {ThresholdSegmentationLevelSetGUI()} {open
  } {
    Fl_Window consoleWindow {
      label {Threshold Segmentation Level Set} open
      xywh {183 261 735 280}
      code0 {\#include <ThresholdSegmentationLevelSetBase.h>}
      code1 {\#include <fltkLightButton.h>} visible
    } {
      Fl_Group Connectors {
        xywh {0 0 725 210}
      } {
        Fl_Box {} {
          xywh {545 79 95 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {80 79 82 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {220 78 185 11} box UP_BOX color 4
        }
      }
      Fl_Group controlsGroup {
        xywh {5 5 725 209} deactivate
      } {
        Fl_Light_Button inputImageButton {
          label {Input Image}
          callback {ShowInputImage();}
          xywh {150 66 84 39} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Threshold Segmentation}
          callback {m_ThresholdLevelSetFilter->Update();}
          xywh {325 66 230 37} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button thresholdedImageButton {
          label Display
          callback {this->ShowThresholdedImage();}
          xywh {620 69 90 31} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Light_Button thresholdedImageVTKButton {
          label {VTK Render}
          callback {ShowThresholdedImageWithVTK();}
          xywh {620 109 90 30} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Value_Output iterationValueOutput {
          label Iteration
          xywh {370 185 55 25} labelsize 12 textsize 12
        }
        Fl_Value_Output rmsValueOutput {
          label RMS
          xywh {460 185 83 25} labelsize 12 textsize 12
        }
      }
      Fl_Slider progressSlider {
        xywh {5 222 720 15} type {Horz Fill} selection_color 2
        code0 {\#include <fltkProgressBar.h>}
        class {fltk::ProgressBar}
      }
      Fl_Output statusTextOutput {
        xywh {5 245 720 25}
      }
      Fl_Value_Input lowerThresholdValueInput {
        label {Lower Threshold}
        callback {m_ThresholdLevelSetFilter->SetLowerThreshold( o->value() );}
        xywh {488 129 55 25} labelsize 12 minimum 1 maximum 255 value 250 textsize 12
      }
      Fl_Button {} {
        label Quit
        callback {this->Quit();}
        xywh {620 165 90 35} box ROUND_UP_BOX labelsize 12 align 128
      }
      Fl_Button {} {
        label Load
        callback {this->LoadInputImage();}
        xywh {30 68 81 35} box ROUND_UP_BOX labelsize 12 align 128
      }
      Fl_Value_Input upperThresholdValueInput {
        label {Upper Threshold}
        callback {m_ThresholdLevelSetFilter->SetUpperThreshold( o->value() );}
        xywh {488 103 55 25} labelsize 12 minimum 1 maximum 255 value 200 textsize 12
      }
      Fl_Value_Input isoSurfaceValueInput {
        label {Iso-Surface}
        callback {m_ThresholdLevelSetFilter->SetIsoSurfaceValue( o->value() );}
        xywh {488 155 55 25} labelsize 12 step 0.01 value 0.5 textsize 12
      }
      Fl_Value_Input maxIterationsValueInput {
        label {Max Iterations}
        callback {m_ThresholdLevelSetFilter->SetNumberOfIterations( static_cast<int>(o->value()) );}
        xywh {486 13 55 25} labelsize 12 minimum 1 maximum 10000 step 1 value 200 textsize 12
      }
      Fl_Value_Input maxRMSValueInput {
        label {Target RMS}
        callback {m_ThresholdLevelSetFilter->SetMaximumRMSError( o->value() );} selected
        xywh {486 40 55 25} labelsize 12 maximum 10 step 0.01 value 0.2 textsize 12
      }
    }
  }
  Function {~ThresholdSegmentationLevelSetGUI()} {return_type virtual
  } {}
  Function {Quit( void )} {return_type {virtual void}
  } {}
  Function {Load( void )} {return_type {virtual void}
  } {}
  Function {ShowAbout( void )} {return_type {virtual void}
  } {}
  Function {ShowInputImage( void )} {return_type {virtual void}
  } {}
  Function {ShowConsole( void )} {return_type {virtual void}
  } {}
  Function {ShowThresholdedImage( void )} {return_type {virtual void}
  } {}
  Function {UpdateExtract()} {open return_type {virtual void}
  } {}
  Function {ShowThresholdedImageWithVTK( void )} {return_type {virtual void}
  } {}
} 
