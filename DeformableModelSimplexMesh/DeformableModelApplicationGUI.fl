# data file for the Fltk User Interface Designer (fluid)
version 1.0104 
header_name {.h} 
code_name {.cxx}
decl {\#include <FL/Fl_File_Chooser.H>} {public
} 

decl {\#include <FL/Fl_Help_Dialog.H>} {public
} 
class DeformableModelApplicationGUI {open : {public DeformableModelApplicationBase}
} {
  Function {DeformableModelApplicationGUI()} {open
  } {
    Fl_Window mainWindow {
      label DeformableModelApplication open
      xywh {195 100 870 820} color 206 labeltype NORMAL_LABEL labelfont 1 resizable
      code0 {\#include "DeformableModelApplicationBase.h"} visible
    } {
      Fl_Menu_Bar {} {
        xywh {0 0 870 20}
      } {
        submenu {} {
          label File open
          xywh {0 0 100 20}
        } {
         menuitem {} {
            label {Load File}
            callback {this->Load();}
            xywh {0 0 100 20}
          }
         menuitem {} {
            label {Create Mesh }
            callback {this->CreateMesh();}
            xywh {0 0 100 20}
          }
         menuitem {} {
            label {Load Mesh}
            callback {this->LoadMesh();}
            xywh {0 0 100 20}
          }
         menuitem {} {
            label {Preprocess Image}
            callback {this->ComputeInternalForces();}
            xywh {0 0 100 20}
          }
        menuitem {} {
            label {Save Mesh}
            callback {this->SaveMesh();}
            xywh {0 0 100 20}
          }
        menuitem {} {
            label {Save Mask}
            callback {this->SaveMask();}
            xywh {0 0 100 20}
          }
        menuitem {} {
            label {Quit}
            callback {this->Quit();}
            xywh {0 0 100 20}
          }
      } 
         submenu {} {
          label Settings open
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label {Segmentation Parameters}
            callback {m_SegmentationParametersWindow->show();}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label {Deform Mesh}
            callback {this->DeformMesh();}
            xywh {0 0 100 20}
          }
        } 
        
     submenu {} {
          label Help open
          xywh {20 20 100 20}
        } {
          menuitem {} {
            label {How to use?}
           callback {Fl_Help_Dialog  *help;    // Help dialog
help = new Fl_Help_Dialog;
help->load("how_to_use.html");
help->show();}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label About
            callback{m_AboutWindow->show();}
            xywh {0 0 100 20}
          }
        }
}
      Fl_Button {} {
        label {READ ME FIRST!!!!!}
        callback {Fl_Help_Dialog  *help;    // Help dialog
help = new Fl_Help_Dialog;
help->load("how_to_use.html");
help->show();}
        xywh {330 765 200 40}  box PLASTIC_UP_BOX color 67 labelfont 1 align 128
      }
      
      Fl_Box axialView {
        label Axial
        xywh {30 40 380 345} box DOWN_FRAME align 2
        code0 {\#include "vtkFlRenderWindowInteractor.h"}
        class vtkFlRenderWindowInteractor
      }
      Fl_Value_Slider axialViewSlider {
        callback {this->SelectAxialSlice( static_cast<int>( o->value() ));}
        xywh {415 40 15 345} maximum 100 step 1
      }
      Fl_Box coronalView {
        label Coronal
        xywh {445 40 380 345} box DOWN_FRAME align 2
        code0 {\#include "vtkFlRenderWindowInteractor.h"}
        class vtkFlRenderWindowInteractor
      }
      Fl_Value_Slider coronalViewSlider {
        callback {this->SelectCoronalSlice( static_cast<int>( o->value() ) );}
        xywh {830 40 15 345} maximum 100 step 1
      }
      Fl_Box sagittalView {
        label Sagittal
        xywh {445 400 380 345} box DOWN_FRAME align 2
        code0 {\#include "vtkFlRenderWindowInteractor.h"}
        class vtkFlRenderWindowInteractor
      }
      Fl_Value_Slider sagittalViewSlider {
        callback {this->SelectSagittalSlice( static_cast<int>( o->value() ) );}
        xywh {830 400 15 345} maximum 100 step 1
      }
      Fl_Box surfaceView {
        label Surface
        xywh {30 400 400 345} box DOWN_FRAME align 2
        code0 {\#include "vtkFlRenderWindowInteractor.h"}
        class vtkFlRenderWindowInteractor
      }
     
    }
   Fl_Window m_SegmentationParametersWindow {
      label {Segmentation Parameters}
      xywh {991 160 300 330} type Double color 206 labelfont 3 visible
    } {
     
      Fl_Input m_InternalForceValueInput {
        label {Internal Forces (Alpha): }
        callback {m_DeformFilter->SetAlpha(atof(m_InternalForceValueInput->value()) );}
        xywh {200 50 75 26} labelfont 1 
      }
      Fl_Input m_ExternalForceValueInput {
        label {External Forces (Beta): }
        callback {m_DeformFilter->SetBeta(atof(m_ExternalForceValueInput->value()) );}
        xywh {200 80 75 26} labelfont 1 
      }
      Fl_Input m_GammaForceValueInput {
        label {Damping Forces (Gamma): }
        callback {m_DeformFilter->SetGamma(atof(m_GammaForceValueInput->value()) );}
        xywh {200 120 75 26} labelfont 1 
      }
      Fl_Input m_RangeForceValueInput {
        label {Range of Search: }
        callback {m_DeformFilter->SetRange(atoi(m_RangeForceValueInput->value()) );}
        xywh {200 150 75 26} labelfont 1
      }
      Fl_Input m_RigidityForceValueInput {
        label {Rigidity (Regularizing) : }
        callback {m_DeformFilter->SetRigidity(atoi(m_RigidityForceValueInput->value()) );}
        xywh {200 190 75 26} labelfont 1 
      }
      Fl_Input m_IterationsValueInput {
        label {Number of Iterations: }
        callback {m_DeformFilter->SetIterations(atoi(m_IterationsValueInput->value()) );}
        xywh {200 220 75 26} labelfont 1 
      }
      Fl_Return_Button {} {
        label Ok
        callback {m_DeformFilter->SetAlpha(atof(m_InternalForceValueInput->value()) );
        m_DeformFilter->SetBeta(atof(m_ExternalForceValueInput->value()) );
        m_DeformFilter->SetGamma(atof(m_GammaForceValueInput->value()) );
        m_DeformFilter->SetRange(atoi(m_RangeForceValueInput->value()) );
        m_DeformFilter->SetRigidity(atoi(m_RigidityForceValueInput->value()) );
        m_DeformFilter->SetIterations(atoi(m_IterationsValueInput->value()) );
        m_SegmentationParametersWindow->hide();}
        xywh {70 270 75 26} labelfont 1
      }
      Fl_Button {} {
        label Cancel
        callback{m_SegmentationParametersWindow->hide();}
        xywh {200 270 75 26} labelfont 1
      }        
        }
Fl_Window m_AboutWindow {
      label {About }
      callback {m_AboutWindow->hide();}
      xywh {-32000 -32000 268 161} type Double hide color 206
    } {
      Fl_Button {} {
        label Dismiss
        callback {m_AboutWindow->hide();}
        xywh {95 135 60 25}
      }
      Fl_Text_Display m_TextDisplay {
        xywh {50 5 160 120}
      }
    }
    code {m_TextBuffer.append("\\nLeila Baghdadi\\n\\nMouse Imaging Centre\\n         MICe\\n\\nToronto Ontario\\nCanada");
m_TextDisplay->buffer(m_TextBuffer);} {}
  
 }
  Function {~DeformableModelApplicationGUI()} {return_type virtual
  } {}
  Function {Help()} {return_type {virtual void}
  } {}
decl {Fl_Text_Buffer m_TextBuffer;} {}        
  Function {Quit()} {return_type {virtual void}
  } {}
  Function {SaveMask()} {return_type {virtual void}
  } {}
  Function {SaveMesh()} {return_type {virtual void}
  } {}
  Function {DeformMesh()} {return_type {virtual void}
  } {}
  Function {LoadMesh()} {return_type {virtual void}
  } {}
  Function {CreateMesh()} {return_type {virtual void}
  } {}
  Function {Load()} {return_type {virtual void}
  } {}
  Function {Show()} {open return_type {virtual void}
  } {}
  Function {Hide()} {open return_type {virtual void}
  } {}
  Function {SelectAxialSlice( int )} {open return_type {virtual void}
  } {}
  Function {SelectCoronalSlice( int )} {open return_type {virtual void}
  } {}
  Function {SelectSagittalSlice( int )} {return_type {virtual void}
  } {}
  Function {ComputeInternalForces()} {return_type {virtual void}
  } {}
 
} 
