# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cxx}
class CannySegmentationLevelSetGUI {open : {public CannySegmentationLevelSetBase}
} {
  Function {CannySegmentationLevelSetGUI()} {open
  } {
    Fl_Window consoleWindow {
      label {Canny Level Set} open
      xywh {495 138 920 305} type Double
      code0 {\#include <CannySegmentationLevelSetBase.h>}
      code1 {\#include <fltkLightButton.h>} visible
    } {
      Fl_Group Connectors {
        xywh {0 0 915 245}
      } {
        Fl_Box {} {
          xywh {787 55 45 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {228 80 10 55} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {200 78 80 11} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {787 100 45 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {510 80 10 55} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {787 55 10 55} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {641 81 10 55} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {470 79 227 11} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {68 80 80 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {732 79 65 11} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {415 80 10 120} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {380 190 10 40} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {65 190 360 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {301 82 10 108} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {65 45 10 155} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {383 5 10 81} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {68 5 325 11} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {445 80 10 120} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {66 5 10 55} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {335 79 10 55} box UP_BOX color 4
        }
      }
      Fl_Group controlsGroup {
        xywh {0 5 915 240} deactivate
      } {
        Fl_Light_Button inputImageButton {
          label Display
          callback {this->ShowInputImage();}
          xywh {35 132 70 25} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label Canny
          callback {this->RunCanny();}
          xywh {373 66 256 34} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button thresholdedImageButton {
          label Display
          callback {this->ShowThresholdedImage();}
          xywh {816 45 90 30} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Light_Button contourExportVTKButton {
          label {VTK Export}
          callback {this->ExportContour();}
          xywh {816 90 90 25} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label Threshold
          callback {m_ThresholdFilter->Update();}
          xywh {676 66 87 34} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button outputLevelSetButton {
          label {Level Set}
          callback {this->ShowOutputLevelSet();}
          xywh {611 120 80 24} type Normal value 1 selection_color 1 labelsize 12 align 144
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Gradient Magnitude}
          callback {this->ComputeGradientMagnitude();}
          xywh {112 63 103 42} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button gradientMagnitudeButton {
          label Display
          callback {this->ShowGradientMagnitudeImage();}
          xywh {205 116 65 24} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Linear + Sigmoid}
          callback {this->ComputeEdgePotential();}
          xywh {257 64 95 41} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button edgePotentialButton {
          label Display
          callback {this->ShowEdgePotentialImage();}
          xywh {322 115 67 25} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Value_Input sigmaValueInput {
          label Sigma
          callback {this->SetSigma( o->value() );}
          xywh {162 39 35 24} labelsize 12 maximum 50 step 0.1 value 0.8 textsize 12
        }
        Fl_Value_Input zeroSetValueInput {
          label {Time Threshold}
          callback {this->SetZeroSetValue( o->value() );}
          xywh {261 210 39 25} labelsize 12 maximum 100 step 0.1 value 20 textsize 12
        }
        Fl_Button {} {
          label {Clear Seeds}
          callback {this->ClearSeeds();}
          xywh {105 124 55 40} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Button {} {
          label {Fast Marching}
          callback {this->ComputeFastMarching();}
          xywh {195 178 149 33} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button fastMarchingResultButton {
          label Overlay
          callback {this->ShowFastMarchingResultImage();}
          xywh {355 211 65 24} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Value_Input sigmoidBetaValueInput {
          label Beta
          callback {m_SigmoidFilter->SetBeta( o->value() );}
          xywh {305 42 35 22} labelsize 12 maximum 300 step 0.1 value 80 textsize 12
        }
        Fl_Value_Input sigmoidAlphaValueInput {
          label Alpha
          callback {m_SigmoidFilter->SetAlpha( o->value() );}
          xywh {305 19 35 23} labelsize 12 minimum -10 maximum 10 step 0.1 value -10 textsize 12
        }
        Fl_Value_Input cannySegmentationIterationsValueInput {
          label Iterations
          callback {m_CannyFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
          xywh {455 43 39 23} labelsize 12 maximum 5000 step 1 value 150 textsize 12
        }
        Fl_Value_Input fastMarchingStoppingValueInput {
          label {Stopping Time}
          callback {m_FastMarchingFilter->SetStoppingValue( o->value() );}
          xywh {262 155 39 23} labelsize 12 maximum 100 step 0.1 value 30 textsize 12
        }
        Fl_Value_Input cannySegmentationRMSErrorValueInput {
          label {RMS Error}
          callback {m_CannyFilter->SetMaximumRMSError( o->value() );}
          xywh {455 20 39 23} labelsize 12 maximum 5 step 0.001 value 0.02 textsize 12
        }
        Fl_Value_Input cannySegmentationCurvatureScalingValueInput {
          label {Curvature Scaling}
          callback {m_CannyFilter->SetCurvatureScaling( o->value() );}
          xywh {439 166 50 23} labelsize 12 align 8 maximum 100 step 0.01 value 0.5 textsize 12
        }
        Fl_Value_Input cannySegmentationPropagationScalingValueInput {
          label {Propagation Scaling}
          callback {m_CannyFilter->SetPropagationScaling( o->value() );} selected
          xywh {439 189 50 23} labelsize 12 align 8 maximum 100 step 0.1 value 1.7 textsize 12
        }
        Fl_Value_Input cannySegmentationAdvectionScalingValueInput {
          label {Advection Scaling}
          callback {m_CannyFilter->SetAdvectionScaling( o->value() );}
          xywh {439 212 50 23} labelsize 12 align 8 maximum 100 step 0.1 value 1 textsize 12
        }
        Fl_Light_Button outputCannyEdgesButton {
          label Edges
          callback {this->ShowOutputCannyEdges();}
          xywh {500 120 80 24} type Normal value 1 selection_color 1 labelsize 12 align 144
          class {fltk::LightButton}
        }
        Fl_Value_Input cannySegmentationStrenghtThresholdValueInput {
          label {Strenght Threshold}
          callback {m_CannyFilter->SetThreshold( o->value() );}
          xywh {502 20 50 23} labelsize 12 align 8 maximum 500 step 0.01 value 150 textsize 12
        }
        Fl_Value_Input cannySegmentationVarianceValueInput {
          label Variance
          callback {m_CannyFilter->SetVariance( o->value() );}
          xywh {503 43 50 23} labelsize 12 align 8 maximum 200 step 0.01 value 1 textsize 12
        }
      }
      Fl_Slider progressSlider {
        xywh {6 250 909 15} type {Horz Fill} selection_color 2
        code0 {\#include <fltkProgressBar.h>}
        class {fltk::ProgressBar}
      }
      Fl_Output statusTextOutput {
        xywh {5 272 909 25}
      }
      Fl_Button {} {
        label Quit
        callback {this->Quit();}
        xywh {817 197 90 35} box ROUND_UP_BOX labelsize 12 align 128
      }
      Fl_Button {} {
        label Load
        callback {this->LoadInputImage();}
        xywh {30 25 81 35} box ROUND_UP_BOX labelsize 12 align 128
      }
    }
  }
  Function {~CannySegmentationLevelSetGUI()} {return_type virtual
  } {
    code {} {}
  }
  Function {Quit( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {Load( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowAbout( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowInputImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowConsole( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowThresholdedImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {UpdateExtract()} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowOutputLevelSet( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowGradientMagnitudeImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowEdgePotentialImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowFastMarchingResultImage( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ShowOutputCannyEdges( void )} {return_type {virtual void}
  } {
    code {} {}
  }
  Function {ExportContour()} {open return_type {virtual void}
  } {
    code {} {}
  }
} 
